# ArgoCD
–í –¥–∞–Ω–Ω–æ–º –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–º –∑–∞–Ω—è—Ç–∏–∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π -
[argocd][].

## Vagrant
–î–ª—è —Ä–∞–±–æ—Ç—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π `Vagrantfile`:
```ruby
Vagrant.configure("2") do |config|
  config.vm.define "argocd" do |c|
    c.vm.provider "virtualbox" do |v|
      v.cpus = 2
      v.memory = 4096
    end
    c.vm.box = "ubuntu/lunar64"
    c.vm.hostname = "argocd"
    c.vm.network "forwarded_port", guest: 80, host: 8888
    c.vm.provision "shell", inline: <<-SHELL
      apt-get update -q
      apt-get install -yq docker.io docker-compose-v2
      usermod -a -G docker vagrant
      echo '{"registry-mirrors":["https:\\/\\/mirror.gcr.io"]}' > /etc/docker/daemon.json
      systemctl restart docker
      curl -LO https://dl.k8s.io/release/v1.30.0/bin/linux/amd64/kubectl
      curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.22.0/kind-linux-amd64
      curl -Lo ./argocd https://github.com/argoproj/argo-cd/releases/download/v2.11.2/argocd-linux-amd64
      install -m 755 kubectl kind argocd /usr/local/bin/
    SHELL
  end
end
```
–î–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é –º–∞—à–∏–Ω—É [docker][], [kubectl][] –∏
[kind][], —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 
–∫–ª–∞—Å—Ç–µ—Ä–æ–º [kubernetes][], –∞ —Ç–∞–∫–∂–µ —É—Ç–∏–ª–∏—Ç–∞ `argocd` –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è [argocd][].

## Install
–°–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤—ã–π –∫–ª–∞—Å—Ç–µ—Ä —Å –ø–æ–º–æ—â—å—é —É—Ç–∏–ª–∏—Ç—ã `kind` –ø–µ—Ä–µ–¥–∞–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é, –≤ –∫–æ—Ç–æ—Ä–æ–π
—É–∫–∞–∑–∞–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ—Ä—Ç—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ —Å–Ω–∞—Ä—É–∂–∏:
```bash
cat <<EOF | kind create cluster --config=-
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true"
  extraPortMappings:
  - containerPort: 80
    hostPort: 80
    protocol: TCP
  - containerPort: 443
    hostPort: 443
    protocol: TCP
EOF
```
–ò —É–±–µ–¥–∏–º—Å—è —á—Ç–æ –æ–Ω —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç:
```console
Creating cluster "kind" ...
 ‚úì Ensuring node image (kindest/node:v1.29.2) üñº
 ‚úì Preparing nodes üì¶
 ‚úì Writing configuration üìú
 ‚úì Starting control-plane üïπÔ∏è
 ‚úì Installing CNI üîå
 ‚úì Installing StorageClass üíæ
Set kubectl context to "kind-kind"
You can now use your cluster with:

kubectl cluster-info --context kind-kind

Not sure what to do next? üòÖ  Check out https://kind.sigs.k8s.io/docs/user/quick-start/
$ kubectl cluster-info
Kubernetes control plane is running at https://127.0.0.1:34853
CoreDNS is running at https://127.0.0.1:34853/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
```

–°–æ–∑–¥–∞–¥–∏–º –Ω–µ–π–º—Å–ø–µ–π—Å –∏ —É—Å—Ç–∞–Ω–æ–≤–∏–º –≤ –Ω–µ–≥–æ [argocd][]:
```console
$ kubectl create namespace argocd
namespace/argocd created
$ kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
customresourcedefinition.apiextensions.k8s.io/applications.argoproj.io created
customresourcedefinition.apiextensions.k8s.io/applicationsets.argoproj.io created
customresourcedefinition.apiextensions.k8s.io/appprojects.argoproj.io created
serviceaccount/argocd-application-controller created
serviceaccount/argocd-applicationset-controller created
serviceaccount/argocd-dex-server created
serviceaccount/argocd-notifications-controller created
serviceaccount/argocd-redis created
serviceaccount/argocd-repo-server created
serviceaccount/argocd-server created
role.rbac.authorization.k8s.io/argocd-application-controller created
role.rbac.authorization.k8s.io/argocd-applicationset-controller created
role.rbac.authorization.k8s.io/argocd-dex-server created
role.rbac.authorization.k8s.io/argocd-notifications-controller created
role.rbac.authorization.k8s.io/argocd-redis created
role.rbac.authorization.k8s.io/argocd-server created
clusterrole.rbac.authorization.k8s.io/argocd-application-controller created
clusterrole.rbac.authorization.k8s.io/argocd-applicationset-controller created
clusterrole.rbac.authorization.k8s.io/argocd-server created
rolebinding.rbac.authorization.k8s.io/argocd-application-controller created
rolebinding.rbac.authorization.k8s.io/argocd-applicationset-controller created
rolebinding.rbac.authorization.k8s.io/argocd-dex-server created
rolebinding.rbac.authorization.k8s.io/argocd-notifications-controller created
rolebinding.rbac.authorization.k8s.io/argocd-redis created
rolebinding.rbac.authorization.k8s.io/argocd-server created
clusterrolebinding.rbac.authorization.k8s.io/argocd-application-controller created
clusterrolebinding.rbac.authorization.k8s.io/argocd-applicationset-controller created
clusterrolebinding.rbac.authorization.k8s.io/argocd-server created
configmap/argocd-cm created
configmap/argocd-cmd-params-cm created
configmap/argocd-gpg-keys-cm created
configmap/argocd-notifications-cm created
configmap/argocd-rbac-cm created
configmap/argocd-ssh-known-hosts-cm created
configmap/argocd-tls-certs-cm created
secret/argocd-notifications-secret created
secret/argocd-secret created
service/argocd-applicationset-controller created
service/argocd-dex-server created
service/argocd-metrics created
service/argocd-notifications-controller-metrics created
service/argocd-redis created
service/argocd-repo-server created
service/argocd-server created
service/argocd-server-metrics created
deployment.apps/argocd-applicationset-controller created
deployment.apps/argocd-dex-server created
deployment.apps/argocd-notifications-controller created
deployment.apps/argocd-redis created
deployment.apps/argocd-repo-server created
deployment.apps/argocd-server created
statefulset.apps/argocd-application-controller created
networkpolicy.networking.k8s.io/argocd-application-controller-network-policy created
networkpolicy.networking.k8s.io/argocd-applicationset-controller-network-policy created
networkpolicy.networking.k8s.io/argocd-dex-server-network-policy created
networkpolicy.networking.k8s.io/argocd-notifications-controller-network-policy created
networkpolicy.networking.k8s.io/argocd-redis-network-policy created
networkpolicy.networking.k8s.io/argocd-repo-server-network-policy created
networkpolicy.networking.k8s.io/argocd-server-network-policy created
$ kubectl patch -n argocd deploy argocd-server --type json -p '[{"op":"add","path":"/spec/template/spec/containers/0/args/-","value":"--insecure"}]'
deployment.apps/argocd-server patched
```
–¢–∞–∫–∂–µ –∑–∞–¥–µ–ø–ª–æ–∏–º `ingress-nginx` –∏ —Å–æ–∑–¥–∞–¥–∏–º —Ä–µ—Å—É—Ä—Å `ingress` –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ [argocd][]:
```console
$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
namespace/ingress-nginx created
serviceaccount/ingress-nginx created
serviceaccount/ingress-nginx-admission created
role.rbac.authorization.k8s.io/ingress-nginx created
role.rbac.authorization.k8s.io/ingress-nginx-admission created
clusterrole.rbac.authorization.k8s.io/ingress-nginx created
clusterrole.rbac.authorization.k8s.io/ingress-nginx-admission created
rolebinding.rbac.authorization.k8s.io/ingress-nginx created
rolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created
clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx created
clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created
configmap/ingress-nginx-controller created
service/ingress-nginx-controller created
service/ingress-nginx-controller-admission created
deployment.apps/ingress-nginx-controller created
job.batch/ingress-nginx-admission-create created
job.batch/ingress-nginx-admission-patch created
ingressclass.networking.k8s.io/nginx created
validatingwebhookconfiguration.admissionregistration.k8s.io/ingress-nginx-admission created
$ kubectl create ingress -n argocd argocd --rule=argo.traefik.me/*=argocd-server:80
ingress.networking.k8s.io/argocd created
```
–ò —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ `argocd` —Å—Ç–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω:
```console
$ curl argo.traefik.me -so /dev/null -w '%{http_code}'
200
```

## ArgoCD CLI
–ü–æ–ª—É—á–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—ã–π —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª—Å—è –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏:
```console
$ argocd admin initial-password -n argocd
5N8ph9wIc2UjagNq

 This password must be only used for first time login. We strongly recommend you update the password using `argocd account update-password`.
```

–ü–æ—Å–ª–µ —á–µ–≥–æ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –ø–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º `admin`:
```console
$ argocd login argo.traefik.me
WARNING: server certificate had error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not argo.traefik.me. Proceed insecurely (y/n)? y
Username: admin
Password:
'admin:login' logged in successfully
Context 'argo.traefik.me' updated
```

–í–æ—Å–ø–æ–ª—å–∑—É–µ–º—Å—è `argocd` –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤
git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ [argocd-example-apps][], –¥–ª—è —ç—Ç–æ–≥–æ –≤—ã–ø–æ–ª–Ω–∏–º –∫–æ–º–∞–Ω–¥—É:
```console
$ argocd app create guestbook --repo https://github.com/argoproj/argocd-example-apps.git --path guestbook --dest-server https://kubernetes.default.svc --dest-namespace default
application 'guestbook' created
```
–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞—Å—Ç —Ä–µ—Å—É—Ä—Å `application` –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ, –≥–¥–µ –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω
—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π [argocd-example-apps][], –ø—É—Ç—å –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ `guestbook` –≤ –¥–∞–Ω–Ω–æ–º
—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏, –≥–¥–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –æ–ø–∏—Å–∞–Ω–∏—è `kubernetes` —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è –¥–µ–ø–ª–æ—è, –∞ —Ç–∞–∫–∂–µ
—Ç–µ–∫—É—â–∏–π –∫–ª–∞—Å—Ç–µ—Ä –∏ –Ω–µ–π–º—Å–ø–µ–π—Å, –≤ –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–∑–≤–µ—Ä–Ω–µ—Ç—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.

–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–Ω–æ —É—Ç–∏–ª–∏—Ç–æ–π `kubectl` –∏–ª–∏ `argocd`:
```console
$ kubectl get application -n argocd
NAME        SYNC STATUS   HEALTH STATUS
guestbook   OutOfSync     Missing
$ argocd app list
NAME              CLUSTER                         NAMESPACE  PROJECT  STATUS     HEALTH   SYNCPOLICY  CONDITIONS  REPO                                                 PATH       TARGET
argocd/guestbook  https://kubernetes.default.svc  default    default  OutOfSync  Missing  Manual      <none>      https://github.com/argoproj/argocd-example-apps.git  guestbook
$ argocd app get guestbook
Name:               argocd/guestbook
Project:            default
Server:             https://kubernetes.default.svc
Namespace:          default
URL:                https://argo.traefik.me/applications/guestbook
Source:
- Repo:             https://github.com/argoproj/argocd-example-apps.git
  Target:
  Path:             guestbook
SyncWindow:         Sync Allowed
Sync Policy:        Manual
Sync Status:        OutOfSync from  (d7927a2)
Health Status:      Missing

GROUP  KIND        NAMESPACE  NAME          STATUS     HEALTH   HOOK  MESSAGE
       Service     default    guestbook-ui  OutOfSync  Missing
apps   Deployment  default    guestbook-ui  OutOfSync  Missing
```

–ù–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ, –Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ –Ω–µ
—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è. –î–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å
–∫–æ–º–∞–Ω–¥—É:
```console
$ argocd app sync guestbook
TIMESTAMP                  GROUP        KIND   NAMESPACE                  NAME    STATUS    HEALTH        HOOK  MESSAGE
2024-05-28T21:41:35+00:00            Service     default          guestbook-ui  OutOfSync  Missing
2024-05-28T21:41:35+00:00   apps  Deployment     default          guestbook-ui  OutOfSync  Missing
2024-05-28T21:41:35+00:00            Service     default          guestbook-ui  OutOfSync  Missing              service/guestbook-ui created
2024-05-28T21:41:35+00:00   apps  Deployment     default          guestbook-ui  OutOfSync  Missing              deployment.apps/guestbook-ui created
2024-05-28T21:41:35+00:00            Service     default          guestbook-ui    Synced  Healthy                  service/guestbook-ui created
2024-05-28T21:41:35+00:00   apps  Deployment     default          guestbook-ui    Synced  Progressing              deployment.apps/guestbook-ui created

Name:               argocd/guestbook
Project:            default
Server:             https://kubernetes.default.svc
Namespace:          default
URL:                https://argo.traefik.me/applications/guestbook
Source:
- Repo:             https://github.com/argoproj/argocd-example-apps.git
  Target:
  Path:             guestbook
SyncWindow:         Sync Allowed
Sync Policy:        Manual
Sync Status:        Synced to  (d7927a2)
Health Status:      Progressing

Operation:          Sync
Sync Revision:      d7927a27b4533926b7d86b5f249cd9ebe7625e90
Phase:              Succeeded
Start:              2024-05-28 21:41:34 +0000 UTC
Finished:           2024-05-28 21:41:35 +0000 UTC
Duration:           1s
Message:            successfully synced (all tasks run)

GROUP  KIND        NAMESPACE  NAME          STATUS  HEALTH       HOOK  MESSAGE
       Service     default    guestbook-ui  Synced  Healthy            service/guestbook-ui created
apps   Deployment  default    guestbook-ui  Synced  Progressing        deployment.apps/guestbook-ui created
```

–ß–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –≤—Å–µ —Ä–µ—Å—É—Ä—Å—ã —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—Å—è –∏ –±—É–¥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Å—Ç–∞—Ç—É—Å–µ
`Healthy`:
```console
$ argocd app get guestbook
Name:               argocd/guestbook
Project:            default
Server:             https://kubernetes.default.svc
Namespace:          default
URL:                https://argo.traefik.me/applications/guestbook
Source:
- Repo:             https://github.com/argoproj/argocd-example-apps.git
  Target:
  Path:             guestbook
SyncWindow:         Sync Allowed
Sync Policy:        Manual
Sync Status:        Synced to  (d7927a2)
Health Status:      Healthy

GROUP  KIND        NAMESPACE  NAME          STATUS  HEALTH   HOOK  MESSAGE
       Service     default    guestbook-ui  Synced  Healthy        service/guestbook-ui created
apps   Deployment  default    guestbook-ui  Synced  Healthy        deployment.apps/guestbook-ui created

$ kubectl get deploy,svc,pod
NAME                           READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/guestbook-ui   1/1     1            1           2m33s

NAME                   TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)   AGE
service/guestbook-ui   ClusterIP   10.96.187.88   <none>        80/TCP    2m33s

NAME                                READY   STATUS    RESTARTS   AGE
pod/guestbook-ui-56c646849b-j7wf2   1/1     Running   0          2m33s
```
–î–æ–±–∞–≤–∏–º —Ç–∞–∫–∂–µ —Ä–µ—Å—É—Ä—Å `ingress` –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é `guestbook-ui`:
```console
$ kubectl create ingress guestbook-ui --rule=guestbook.traefik.me/*=guestbook-ui:80
ingress.networking.k8s.io/guestbook-ui created
$ curl -s guestbook.traefik.me | grep title
    <title>Guestbook</title>
```

–ü–æ—Å–ª–µ —á–µ–≥–æ –º–æ–∂–µ–º —É–¥–∞–ª–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:
```console
$ argocd app delete guestbook
Are you sure you want to delete 'guestbook' and all its resources? [y/n] y
application 'guestbook' deleted
$ kubectl get pod
No resources found in default namespace.
$ curl -s guestbook.traefik.me | grep title
<head><title>503 Service Temporarily Unavailable</title></head>
```

## ArgoCD UI
–í [argocd][] —Ç–∞–∫–∂–µ –µ—Å—Ç—å —É–¥–æ–±–Ω—ã–π web –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É
[argo.traefik.me:8888](http://argo.traefik.me:8888/). –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –≤ –Ω–µ–º –ø–æ–¥
–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º `admin` –∏ –ø–∞—Ä–æ–ª–µ–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏–ª–∏ –ø–æ—Å–ª–µ –∏–Ω—Å—Ç–∞–ª–ª—è—Ü–∏–∏:

![](img/argocd1.png)

–ü–æ—Å–ª–µ —á–µ–≥–æ –ø—Ä–æ–¥–µ–ª–∞–µ–º –≤ –Ω–µ–º —Ç–æ—Ç –∂–µ –ø—É—Ç—å, —á—Ç–æ —Å–¥–µ–ª–∞–ª–∏ —Å –ø–æ–º–æ—â—å—é `cli`.
–ù–∞–∂–º–µ–º `Create Application` –∏ –∑–∞–ø–æ–ª–Ω–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è:

![](img/argocd2.png)

–í –∏—Å—Ç–æ—á–Ω–∏–∫–µ —É–∫–∞–∂–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
[https://github.com/argoproj/argocd-example-apps.git][argocd-example-apps]
–∏ –ø—É—Ç—å –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ `guestbook`:

![](img/argocd3.png)

–ê –≤ –∫–∞—á–µ—Å—Ç–≤–µ `destination` —É–∫–∞–∂–µ–º –Ω–∞—à —Ç–µ–∫—É—â–∏–π –∫–ª–∞—Å—Ç–µ—Ä –∏ –Ω–µ–π–º—Å–ø–µ–π—Å `default`:

![](img/argocd4.png)

–ü–æ—Å–ª–µ —á–µ–≥–æ –Ω–∞–∂–º–µ–º –∫–Ω–æ–ø–∫—É `Create` –∏ —É–≤–∏–¥–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:

![](img/argocd5.png)

![](img/argocd6.png)

–ù–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É `Sync` –∏ –¥–∞–ª–µ–µ `Synchronize` –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
–≤ –∫–ª–∞—Å—Ç–µ—Ä–µ —Å git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º:

![](img/argocd7.png)

–ü–æ—Å–ª–µ —á–µ–≥–æ –ø–æ –∞–¥—Ä–µ—Å—É [guestbook.traefik.me:8888](http://guestbook.traefik.me:8888/)
–±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –¥–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:

![](img/argocd8.png)

[argocd]:https://argo-cd.readthedocs.io/en/stable/
[kubernetes]:https://kubernetes.io/ru/
[docker]:https://docs.docker.com/engine/
[kubectl]:https://kubernetes.io/ru/docs/reference/kubectl/kubectl/
[kind]:https://kind.sigs.k8s.io/
[argocd-example-apps]:https://github.com/argoproj/argocd-example-apps.git
